apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: blixter
  labels: { app: frontend }
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
        - name: frontend
          image: ghcr.io/mp281x/blixter-frontend:latest
          ports: [containerPort: 3000]
          env:
            - { name: REDIS_URL, valueFrom: { secretKeyRef: { name: 'frontend', key: 'REDIS_URL' } } }
            - { name: POSTGRES_URL, valueFrom: { secretKeyRef: { name: 'frontend', key: 'POSTGRES_URL' } } }
            - { name: S3_KEY, valueFrom: { secretKeyRef: { name: 'frontend', key: 'S3_KEY' } } }
            - { name: S3_SECRET, valueFrom: { secretKeyRef: { name: 'frontend', key: 'S3_SECRET' } } }

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: blixter
spec:
  selector: { app: frontend }
  ports: [{ port: 3000, name: frontend, targetPort: 3000 }]

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: frontend
  namespace: blixter
  annotations:
    kubernetes.io/ingress.class: traefik-external
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`blixter.mp281x.xyz`)
      kind: Rule
      services: [{ name: frontend, port: 3000 }]
